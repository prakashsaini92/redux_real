{"version":3,"sources":["PostForm.js","Post.js","EditComponent.js","AllPost.js","App.js","reducers/postReducer.js","index.js"],"names":["PostForm","handleSubmit","e","preventDefault","title","_this","getTitle","value","message","getMessage","data","id","Date","editing","props","dispatch","type","_this2","this","react_default","a","createElement","className","onSubmit","required","ref","input","placeholder","rows","cols","Component","connect","Post","post","onClick","EditComponent","handleEdit","newTitle","newMessage","key","defaultValue","AllPost","posts","map","src_EditComponent","src_Post","state","App","src_PostForm","src_AllPost","postReducer","arguments","length","undefined","action","concat","filter","Object","objectSpread","store","createStore","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2e5607f7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nclass PostForm extends Component {\r\nhandleSubmit = (e) => {\r\ne.preventDefault();\r\n const title = this.getTitle.value;\r\n const message = this.getMessage.value;\r\n const data = {\r\n  id: new Date(),\r\n  title,\r\n  message,\r\n  editing: false\r\n }\r\n this.props.dispatch({\r\n type: 'ADD_POST',\r\n data\r\n })\r\n this.getTitle.value = '';\r\n this.getMessage.value = '';\r\n}\r\nrender() {\r\nreturn (\r\n<div className=\"post-container\">\r\n  <h1 className=\"post_heading\">Update Details</h1>\r\n  <form className=\"form\" onSubmit={this.handleSubmit} >\r\n   <input required type=\"text\" ref={(input) => this.getTitle = input}\r\n   placeholder=\"Enter Title\" /><br /><br />\r\n   <textarea required rows=\"5\" ref={(input) => this.getMessage = input}\r\n   cols=\"28\" placeholder=\"Enter details\" /><br /><br />\r\n   <button>Submit</button>\r\n  </form>\r\n</div>\r\n);\r\n}\r\n}\r\nexport default connect()(PostForm);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nclass Post extends Component {\r\nrender() {\r\nreturn (\r\n<div className=\"post\">\r\n  <h2 className=\"post_title\">{this.props.post.title}</h2>\r\n  <p className=\"post_message\">{this.props.post.message}</p>\r\n  <div className=\"control-buttons\">\r\n    <button className=\"edit\"\r\n    onClick={() => this.props.dispatch({ type: 'EDIT_POST', id: this.props.post.id })\r\n    }\r\n    >Edit</button>\r\n    <button className=\"delete\"\r\n    onClick={() => this.props.dispatch({ type: 'DELETE_POST', id: this.props.post.id })}\r\n    >Delete</button>\r\n  </div>\r\n</div>\r\n);\r\n}\r\n}\r\nexport default connect()(Post);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass EditComponent extends Component {\r\nhandleEdit = (e) => {\r\n  e.preventDefault();\r\n  const newTitle = this.getTitle.value;\r\n  const newMessage = this.getMessage.value;\r\n  const data = {\r\n    newTitle,\r\n    newMessage\r\n  }\r\n  this.props.dispatch({ type: 'UPDATE', id: this.props.post.id, data: data })\r\n}\r\nrender() {\r\nreturn (\r\n<div key={this.props.post.id} className=\"post\">\r\n  <form className=\"form\" onSubmit={this.handleEdit}>\r\n    <input required type=\"text\" ref={(input) => this.getTitle = input}\r\n    defaultValue={this.props.post.title} placeholder=\"Enter Post Title\" /><br /><br />\r\n    <textarea required rows=\"5\" ref={(input) => this.getMessage = input}\r\n    defaultValue={this.props.post.message} cols=\"28\" placeholder=\"Enter Post\" /><br /><br />\r\n    <button>Update</button>\r\n  </form>\r\n</div>\r\n);\r\n}\r\n}\r\nexport default connect()(EditComponent);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Post from './Post';\r\nimport EditComponent from './EditComponent';\r\nclass AllPost extends Component {\r\nrender() {\r\nreturn (\r\n<div>\r\n  <h6 className=\"post_heading\">All Updated List</h6>\r\n  {this.props.posts.map((post) => (\r\n  <div key={post.id}>\r\n    {post.editing ? <EditComponent post={post} key={post.id} /> : <Post post={post}\r\n    key={post.id} />}\r\n  </div>\r\n))}\r\n</div>\r\n);\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\nreturn {\r\nposts: state\r\n}\r\n}\r\nexport default connect(mapStateToProps)(AllPost);","import React, { Component } from 'react';\nimport PostForm from './PostForm';\nimport AllPost from './AllPost';\n\n\nclass App extends Component {\nrender() {\nreturn (\n<div className=\"App\">\n  <div className=\"navbar\">\n    <h5 className=\"center \"> Redux is Real World</h5>\n    </div>\n    <PostForm />\n    <AllPost />\n</div>\n);\n}\n}\nexport default App;","const postReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n    case 'ADD_POST':\r\n    return state.concat([action.data])\r\n    case 'DELETE_POST':\r\n    return state.filter((post) => post.id !== action.id)\r\n    case 'EDIT_POST':\r\n    return state.map((post) => post.id === action.id ? { ...post, editing: !post.editing } : post)\r\n    case 'UPDATE':\r\n    return state.map((post) => {\r\n    if (post.id === action.id) {\r\n    return {\r\n    ...post,\r\n    title: action.data.newTitle,\r\n    message: action.data.newMessage,\r\n    editing: !post.editing\r\n    }\r\n    } else return post;\r\n    })\r\n    default:\r\n    return state;\r\n    }\r\n    }\r\n    export default postReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\n\nimport postReducer from './reducers/postReducer';\nconst store = createStore(postReducer);\nReactDOM.render(\n<Provider store={store}>\n<App />\n</Provider>, document.getElementById('root'));"],"sourceRoot":""}